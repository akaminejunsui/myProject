/**
 * Main requirejs config file
 * @param  {object} root    window / global
 * @param  {function} factory function definition
 * @return {object}         requirejs configuration
 * @todo use flat folder structure
 */
(function(root, factory) {
    'use strict';

    // flag to use distribution folder for features / modules
    root.launchpad = root.launchpad || {};
    root.launchpad.config = root.launchpad.config || {
        usemin: true
    };

    //var USEMIN = Boolean(root.launchpad.config.usemin);
    var USEMIN = true;
    var DIST = USEMIN ? 'dist/' : '';
    var host;

    if (typeof exports === 'object') {
        host = require('os').hostname();
        module.exports = factory(root, '');
    } else if (typeof requirejs === 'function') {
        require.config(factory(root, DIST));
        host = root.location.host;
    }
    if(!USEMIN && host.indexOf('local') > -1) {
        console.warn('You are using unminified version of modules/features !!! @', host);
    }
}(this, function(root, dist) {

    'use strict';

    var app = document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1;
    var testEnv = document.URL.indexOf( 'phxuat' ) === -1 || document.URL.indexOf( '10.122.128.46' ) === -1 || document.URL.indexOf( 'localhost' ) === -1;
    var path = root.launchpad.config.path || 'features/[BBHOST]';
    var libpath = root.launchpad.config.path || 'features-lib';

    if(app || testEnv){
        libpath = path
    }

    var config = {

        baseUrl: (function(launchpad) {
            return launchpad.staticRoot || './';
        })(root.launchpad || {}),

        paths: {
            /**
             * Common libs
             */
            // utility belt
            'lodash'                  : [ libpath + '/lodash/lodash.min', path + '/lodash/lodash' ],
            // fetch
            'fetch'                   : [ libpath + '/fetch/fetch'],
            // Mobile and gestures
            'hammerjs'                : [ libpath + '/hammerjs/hammer.min', path + '/hammerjs/hammer' ],
            // date
            'moment'                  : [ libpath + '/moment/min/moment.min', path + '/moment/moment' ],
            // graphics and animation
            'd3'                      : [ path + '/d3/d3.min', path + '/d3/d3' ],
            // IE8 dependensies for charts including SVG polyfills
            'r2d3'                    : [ path + '/module-polyfills/scripts/r2d3', path + '/module-polyfills/scripts/r2d3'],
            'aight'                    : [ path + '/module-polyfills/scripts/aight', path + '/module-polyfills/scripts/aight'],
            // Template-ing systems
            'handlebars'              : [ path + '/handlebars/handlebars.min', path + '/handlebars/handlebars' ],

            // angular & 3rd party ng libs
            'angular'                 : [ libpath + '/angular/angular.min', path + '/angular/angular' ],
            'angular-resource'        : [ libpath + '/angular-resource/angular-resource.min' ],
            'angular-translate'       : [ libpath + '/angular-translate/angular-translate.min' ],
            'angular-dynamic-locale'  : [ libpath + '/angular-dynamic-locale/tmhDynamicLocale.min' ],
            'bootstrap-isobar'               : [ libpath + '/bootstrap-isobar/dist/js/bootstrap.min' ],
            'owl-carousel'            : libpath + '/owl-carousel/owl.carousel.min',

            // LP foundation
            'base'                    : libpath + '/base/' + dist + 'scripts',
            'core'                    : libpath + '/core/' + dist + 'scripts',
            'ui'                      : libpath + '/ui/' + dist + 'scripts',
            'mock'                    : path + '/mock/dist/scripts',

            //amb ui
            'amb-ui'                  : path + '/amb-ui/' + dist + 'scripts',
            // LP modules
            'module-currencies'       : path + '/module-currencies/'+ dist +'scripts',
            'module-accounts'         : path + '/module-accounts/'+ dist +'scripts',
            'module-automation'       : path + '/module-automation/'+ dist +'scripts',
            'module-estatements'      : path + '/module-estatements/'+ dist +'scripts',
            'module-payments'         : path + '/module-payments/'+ dist +'scripts',
            'module-users'            : path + '/module-users/'+ dist +'scripts',
            'module-wealth'           : path + '/module-wealth/'+ dist +'scripts',
            'module-freshness'        : path + '/module-freshness/'+ dist +'scripts',
            'module-tags'             : path + '/module-tags/'+ dist +'scripts',
            'module-charts'           : path + '/module-charts/'+ dist +'scripts',
            'module-badges'           : path + '/module-badges/'+ dist +'scripts',
            'module-expenses'         : path + '/module-expenses/'+ dist +'scripts',
            'module-places'           : path + '/module-places/'+ dist +'scripts',
            'module-ebilling'         : path + '/module-ebilling/'+ dist +'scripts',
            'module-transactions'     : path + '/module-transactions/'+ dist +'scripts',
            'module-contacts'         : path + '/module-contacts/'+ dist +'scripts',
            'module-spring-transition': path + '/module-spring-transition/'+ dist +'scripts',
            'module-devices'          : path + '/module-devices/'+ dist +'scripts',
            'module-enrollment'       : path + '/module-enrollment/'+ dist +'scripts',
            'module-behaviors'        : path + '/module-behaviors/scripts',
            'module-addressbook'      : path + '/module-addressbook/'+ dist +'scripts',
            'module-tac'              : path + '/module-tac/'+ dist +'scripts',
            'module-amb-accounts'     : path + '/module-amb-accounts/'+ dist +'scripts',
            'module-account-details'  : path + '/module-account-details/'+ dist +'scripts',
            'module-amb-summary'      : path + '/module-amb-summary/'+ dist +'scripts',
            'module-amb-transactions' : path + '/module-amb-transactions/'+'scripts',
            'module-amb-account-types': path + '/module-amb-account-types/'+ dist +'scripts',
            'module-amb-users'      : path + '/module-amb-users/'+ dist +'scripts',
            'module-access-token': path + '/module-access-token/'+ dist +'scripts',
            'module-tnc': path + '/module-tnc/'+ dist +'scripts',
            'module-ids-types': path + '/module-ids-types/'+ dist +'scripts',
	        'module-ids-types2': path + '/module-ids-types2/scripts',
            'module-crypto'           : path + '/module-crypto/'+ dist +'scripts',
            'module-selectpicker': path + '/module-selectpicker/'+ dist +'scripts',
            'module-needhelp': path + '/module-needhelp/'+ dist +'scripts',
            'module-captcha': path + '/module-captcha/'+ dist +'scripts',
            'module-tooltip': path + '/module-tooltip/'+ dist +'scripts',
            'module-contextual-menu'  : path + '/module-contextual-menu/'+ dist +'scripts',
            'module-stepindicator': path + '/module-stepindicator/'+ dist +'scripts',
            'module-filter-currency': path + '/module-filter-currency/'+ dist +'scripts',
            'module-filter-highlight': path + '/module-filter-highlight/'+ dist +'scripts',
            'module-customscrollbar': path + '/module-customscrollbar/'+ dist +'scripts',
            'module-fixedcenter': path + '/module-fixedcenter/'+ dist +'scripts',
            'module-amount-format': path + '/module-amount-format/'+ dist +'scripts',
            'module-list-no-result': path + '/module-list-no-result/'+ dist +'scripts',
            'module-amb-tab': path + '/module-amb-tab/'+ dist +'scripts',
            'angular-sanitize' : [ libpath + '/angular-sanitize/dist/js/sanitize' ],
            'angular-moment' : [ libpath + '/angular-moment/dist/js/moment' ],
            'angular-filter-master' : [ libpath + '/angular-filter/dist/angular-filter' ],
            'module-amb-interceptor': path + '/module-amb-interceptor/' + dist + 'scripts',
            'module-amb-loading' : [ path + '/module-amb-loading/'+ dist +'scripts' ],
            'module-amb-analytics' : [ path + '/module-amb-analytics/'+ dist +'scripts' ],
            'module-numpad' : [ path + '/module-numpad/'+ dist +'scripts' ],
            'module-pin-numpad' : [ path + '/module-pin-numpad/'+ dist +'scripts' ],
            'ramda' : [ libpath + '/ramda/dist/ramda.min' ],
	        'fine-uploader' : [ libpath + '/fine-uploader/dist/fine-uploader.min' ],
            'angular-ui-select' : [ libpath + '/angular-ui-select/dist/select.min' ],
            'angularjs-slider' : [ libpath + '/angularjs-slider/dist/rzslider.min' ],
            'swiper' :  libpath + '/swiper/dist/js/swiper.min' ,
            'module-tac2'              : path + '/module-tac2/' +'scripts',
            'chart' :  path + '/chart/Chart',
            // 'slick' :  [ libpath + '/slick/slick.min' ],
            'slick' :  [ path + '/slick/slick' ],
            'ellipsis' :  [ path + '/ellipsis/ellipsis.min' ],

            // requirejs-plugins
            'async'                   : [ path + '/requirejs-plugins/src/async'],
            'goog'                    : [ path + '/requirejs-plugins/src/goog'],
            'module-fd-rate' : [ path + '/module-fd-rate/scripts'],
            'module-account-limit' : [ path + '/module-account-limit/'+ dist +'scripts'],
            'module-signin-security' : [ path + '/module-signin-security/'+ dist +'scripts'],
            'module-profile-setting' : [ path + '/module-profile-setting/'+ dist +'scripts'],
            'crypto-js' : [ path + '/crypto-js/crypto-js'],
            'module-amb-nad' : [ path + '/module-amb-nad/' +'scripts']

        },
        // Register packages
        packages: [
            'base',
            'core',
            'ui',
            'mock',

            'module-currencies',
            'module-accounts',
            'module-automation',
            'module-estatements',
            'module-payments',
            'module-users',
            'module-wealth',
            'module-freshness',
            'module-tags',
            'module-charts',
            'module-badges',
            'module-expenses',
            'module-places',
            'module-ebilling',
            'module-transactions',
            'module-contacts',
            'module-spring-transition',
            'module-devices',
            'module-enrollment',
            'module-behaviors',
            'module-addressbook',
            'module-amb-accounts',
            'module-account-details',
            'module-tac',
            'module-amb-summary',
            'module-amb-transactions',
            'module-amb-account-types',
            'module-amb-users',
            'amb-ui',
            'module-access-token',
            'module-tnc',
            'module-ids-types',
	        'module-ids-types2',
            'module-selectpicker',
            'module-needhelp',
            'module-captcha',
            'module-tooltip',
            'module-contextual-menu',
            'module-stepindicator',
            'module-filter-currency',
            'module-filter-highlight',
            'module-customscrollbar',
            'module-fixedcenter',
            'module-amount-format',
            'module-list-no-result',
            'module-amb-tab',
            'module-crypto',
            'module-amb-interceptor',
            'module-amb-loading',
            'module-amb-analytics',
            'module-numpad',
            'module-pin-numpad',
            'module-fd-rate',
            'module-account-limit',
            'module-profile-setting',
            'module-signin-security',
            'module-tac2',
            'module-amb-nad'
        ],
        shim: {
            'angular': {
                exports: 'angular'
            },
            'angular-resource': {
                deps: ['angular']
            },
            'angular-translate': {
                deps: ['angular']
            },
            'slick': {
                deps: ['jquery'],
                exports: 'jQuery.fn.slick'
            },
			'ellipsis': {
                deps: ['jquery'],
                exports: 'jQuery.fn.ellipsis'
            },
            'd3': {
                exports: 'd3'
            },
            "r2d3" : { deps: ["aight"], exports : "d3" },
            'angular-dynamic-locale': {
                deps: ['angular']
            },
            'angular-sanitize' : {
                deps: ['angular']
            },
            'angular-filter-master' : {
                deps: ['angular']
            },
            'angular-moment' : {
                deps: ['angular']
            },
            'angular-ui-select' : {
                deps: ['angular']
            },
            'angularjs-slider' : {
                deps: ['angular']
            }
        },
        map: {
            '*': {
                'd3': (function resolveD3Dependency() {
                    return isOldIE() ? 'r2d3' : 'd3';
                })(),
                'webStorage': webstorage(isStorageWritable())
            }
        }
    };

    // helpers

    // Returns version of IE as a number works for IE version [7, 11)
    function getInternetExplorerVersion() {
        var rv = -1;
        if (navigator && navigator.appName == 'Microsoft Internet Explorer') {
            var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
            if (re.exec(navigator.userAgent || "") != null) {
                rv = parseFloat(RegExp.$1);
            }
        }
        return rv;
    }

    // returns true on IE versions up to 8
    function isOldIE() {
        var ieVersion = getInternetExplorerVersion();
        return ieVersion > 0 && ieVersion <= 8;
    }

    // polyfill storage with Cookie
    function webstorage(isStorage) {
        function createCookie(name, value, days) {
            var date, expires;

            if (days > 0) {
              date = new Date();
              date.setTime(date.getTime()+(days*24*60*60*1000));
              expires = "; expires="+date.toGMTString();
            } else {
              expires = "; expires=Thu, 01 Jan 1970 00:00:01 GMT";
            }
            document.cookie = name+"="+value+expires+"; path=/";
        }

        function readCookie(name) {
            var nameEQUAL = name + "=";
            var cookieArr = document.cookie.split(';');
            var i;
            var cookie;

            for (i=0; i < cookieArr.length; i++) {
                cookie = cookieArr[i];
                while (cookie.charAt(0)==' ') {
                    cookie = cookie.substring(1,cookie.length);
                }

                if (cookie.indexOf(nameEQUAL) == 0) {
                    return cookie.substring(nameEQUAL.length,cookie.length);
                }
            }

            return null;
        }

        function setData(name,data) {
            data = JSON.stringify(data);
            createCookie(name, data, 1);
        }

        function clearData(name) {
            createCookie(name, '', 0);
        }

        function getData(name) {
            var data = readCookie(name);
            return data ? JSON.parse(data) : {};
        }

        if (!isStorage) {

            Storage.prototype._data = getData('sessionStorage');

            Storage.prototype.setItem = function (id, val) {
                var type;
                if (this === window.sessionStorage) {
                    type = 'sessionStorage';
                } else if (this === window.localStorage) {
                    type = 'localStorage';
                } else {
                    console.trace('not session nor local');
                }

                this._data = getData(type);
                this._data[id] = val+'';
                setData(type,this._data);

            }

            Storage.prototype.getItem = function (id) {
                var type;
                if (this === window.sessionStorage) {
                    type = 'sessionStorage';
                } else if (this === window.localStorage) {
                    type = 'localStorage';
                } else {
                    console.trace('not session nor local');
                }

                this._data = getData(type);
                return this._data[id] === undefined ? null : this._data[id];
            },

            Storage.prototype.removeItem = function (id) {
                var type;
                if (this === window.sessionStorage) {
                    type = 'sessionStorage';
                } else if (this === window.localStorage) {
                    type = 'localStorage';
                } else {
                    console.trace('not session nor local');
                }

                this._data = getData(type);
                delete this._data[id];
                setData(type,this._data);
            },

            Storage.prototype.clear = function () {
                var type;
                if (this === window.sessionStorage) {
                    type = 'sessionStorage';
                } else if (this === window.localStorage) {
                    type = 'localStorage';
                } else {
                    console.trace('not session nor local');
                }

                console.log('clear',type);
                this._data = {};
                clearData(type);
            }
        }
    }

    // test writing to webstorage
    function isStorageWritable() {
        try {
            window.localStorage.setItem('t', 't');
            window.localStorage.removeItem('t');
            return "localStorage" in window && window.localStorage != null;
        } catch (e) {
            return false;
        }
    }

    function loadCss(url) {
        var link = document.createElement("link");
        link.type = "text/css";
        link.rel = "stylesheet";
        link.href = url;
        document.getElementsByTagName("head")[0].appendChild(link);
    }

    // shim libraries loaded as <script> tag
    if(root.jQuery) {
        requirejs.undef('jquery');
        define('jquery', function() { return root.jQuery });
    }
    if(root.angular) {
        requirejs.undef('angular');
        define('angular', function() { return root.angular });
    }

    if(root.d3) {
        requirejs.undef('d3');
        requirejs.undef('r2d3');
        define('r2d3', function() { return root.d3 });
        define('d3', function() { return root.d3 });
    }

    //inject css
    if(!app){
        loadCss(config.baseUrl+"/"+path+"/theme-isobar/dist/styles/scrollbar.css");
        loadCss(config.baseUrl+"/"+path+"/theme-isobar/dist/styles/selective.css");
        loadCss(config.baseUrl+"/"+path+"/theme-isobar/dist/styles/select.min.css");
        loadCss(config.baseUrl+"/"+path+"/theme-isobar/dist/styles/rzslider.min.css"); 
        loadCss(config.baseUrl+"/"+path+"/theme-isobar/dist/styles/swiper.min.css");   
        loadCss(config.baseUrl+"/"+path+"/theme-isobar/dist/styles/aleph.css");               
        loadCss(config.baseUrl+"/"+path+"/theme-isobar/dist/styles/ambank.css");    
    }

    return config;
}));
